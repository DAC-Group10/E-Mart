{"ast":null,"code":"// import { useState, useEffect } from \"react\";\n// import { useSelector } from \"react-redux\";\n// import Table from 'react-bootstrap/Table';\n// import Button from 'react-bootstrap/Button';\n// import { useNavigate } from \"react-router-dom\";\n// import \"./Cart.css\";\n\n// export function Cart(props) {\n//     const [total, setTotal] = useState(0);\n//     const [totalredeem, setTotalredeem] = useState(0);\n//     const [quantity, setQuantity] = useState(1);\n//     let navigate = useNavigate();\n//     const [Cart, setCart] = useState([]);\n//     const Uobj = useSelector((state) => {\n//         return state.user;\n//     });\n//     useEffect((event) => {\n//         fetch(\"http://localhost:8080/api/getCartByCustomer/\" + Uobj.cust_Id)\n//             .then(res => res.json())\n//             .then((result) => {\n//                 setCart(result);\n//                 let t = 0, r = 0;\n//                 result.forEach(e => {\n//                     t += e.product.mrpPrice;\n//                     r += e.product.pointsToBeRedeem\n//                     setTotal(t);\n//                     setTotalredeem(r);\n//                 });\n//             }\n//             );\n\n//     }, []);\n\n//     const handleDelete = (event, cartid) => {\n//         setCart(Cart.filter((item) => item.cartid !== cartid));\n//         fetch(\"http://localhost:8080/api/deleteCart/\" + cartid, {\n//             method: 'Delete'\n//         })\n//         alert(\"Item removed!\")\n//         navigate('/Cart');\n//     }\n\n//     const handleInvoice = (event, cart) => {\n\n//     }\n\n//     const dototal = (e) => {\n//         if (e.target.checked)\n//             setTotal(total - totalredeem);\n//         else\n//             setTotal(total + totalredeem);\n//     }\n\n//     return (\n//         <div>\n//             <div className='cartcontainer'>\n//                 <h2>*Cart*</h2>\n//                 <Table striped bordered hover>\n//                     <thead>\n//                         <tr>\n//                             <th></th>\n//                             <th>Product Name</th>\n//                             <th>Price</th>\n//                             <th>Redeem Points</th>\n//                             {/* <th>Quantity</th> */}\n//                         </tr>\n//                     </thead>\n//                     <tbody>\n//                         {Cart.map(cart => (\n//                             <tr key={cart.cart_Id}>\n//                                 <td><img src={cart.product.prodImage}></img></td>\n//                                 <td>{cart.product.prodName}</td>\n//                                 <td>₹{cart.product.mrpPrice}</td>\n//                                 <td>{cart.product.pointsToBeRedeem}</td>\n//                                 {/* <td><button name=\"+\" onClick={setquant}>+</button> {quantity} <button name=\"-\" onClick={setquant}>-</button></td> */}\n//                                 <td><Button variant=\"danger\" onClick={(event) => handleDelete(event, cart.cart_Id)}>Remove</Button></td>\n//                             </tr>\n\n//                         ))}\n//                         <tr>\n//                             <td>Total</td>\n//                             <td></td>\n//                             <td>₹{total}</td>\n//                             <td><input name=\"rp\" type=\"checkbox\" onChange={dototal} />{totalredeem}</td>\n//                             <td></td>\n//                         </tr>\n//                     </tbody>\n//                 </Table>\n//                 <Button>Place Order</Button>\n//             </div>\n//         </div>\n//     );\n// }","map":{"version":3,"names":[],"sources":["D:/Project_React/e_mart/src/Components/Cart.js"],"sourcesContent":["// import { useState, useEffect } from \"react\";\r\n// import { useSelector } from \"react-redux\";\r\n// import Table from 'react-bootstrap/Table';\r\n// import Button from 'react-bootstrap/Button';\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import \"./Cart.css\";\r\n\r\n// export function Cart(props) {\r\n//     const [total, setTotal] = useState(0);\r\n//     const [totalredeem, setTotalredeem] = useState(0);\r\n//     const [quantity, setQuantity] = useState(1);\r\n//     let navigate = useNavigate();\r\n//     const [Cart, setCart] = useState([]);\r\n//     const Uobj = useSelector((state) => {\r\n//         return state.user;\r\n//     });\r\n//     useEffect((event) => {\r\n//         fetch(\"http://localhost:8080/api/getCartByCustomer/\" + Uobj.cust_Id)\r\n//             .then(res => res.json())\r\n//             .then((result) => {\r\n//                 setCart(result);\r\n//                 let t = 0, r = 0;\r\n//                 result.forEach(e => {\r\n//                     t += e.product.mrpPrice;\r\n//                     r += e.product.pointsToBeRedeem\r\n//                     setTotal(t);\r\n//                     setTotalredeem(r);\r\n//                 });\r\n//             }\r\n//             );\r\n\r\n//     }, []);\r\n\r\n//     const handleDelete = (event, cartid) => {\r\n//         setCart(Cart.filter((item) => item.cartid !== cartid));\r\n//         fetch(\"http://localhost:8080/api/deleteCart/\" + cartid, {\r\n//             method: 'Delete'\r\n//         })\r\n//         alert(\"Item removed!\")\r\n//         navigate('/Cart');\r\n//     }\r\n\r\n//     const handleInvoice = (event, cart) => {\r\n\r\n//     }\r\n\r\n//     const dototal = (e) => {\r\n//         if (e.target.checked)\r\n//             setTotal(total - totalredeem);\r\n//         else\r\n//             setTotal(total + totalredeem);\r\n//     }\r\n\r\n\r\n//     return (\r\n//         <div>\r\n//             <div className='cartcontainer'>\r\n//                 <h2>*Cart*</h2>\r\n//                 <Table striped bordered hover>\r\n//                     <thead>\r\n//                         <tr>\r\n//                             <th></th>\r\n//                             <th>Product Name</th>\r\n//                             <th>Price</th>\r\n//                             <th>Redeem Points</th>\r\n//                             {/* <th>Quantity</th> */}\r\n//                         </tr>\r\n//                     </thead>\r\n//                     <tbody>\r\n//                         {Cart.map(cart => (\r\n//                             <tr key={cart.cart_Id}>\r\n//                                 <td><img src={cart.product.prodImage}></img></td>\r\n//                                 <td>{cart.product.prodName}</td>\r\n//                                 <td>₹{cart.product.mrpPrice}</td>\r\n//                                 <td>{cart.product.pointsToBeRedeem}</td>\r\n//                                 {/* <td><button name=\"+\" onClick={setquant}>+</button> {quantity} <button name=\"-\" onClick={setquant}>-</button></td> */}\r\n//                                 <td><Button variant=\"danger\" onClick={(event) => handleDelete(event, cart.cart_Id)}>Remove</Button></td>\r\n//                             </tr>\r\n\r\n//                         ))}\r\n//                         <tr>\r\n//                             <td>Total</td>\r\n//                             <td></td>\r\n//                             <td>₹{total}</td>\r\n//                             <td><input name=\"rp\" type=\"checkbox\" onChange={dototal} />{totalredeem}</td>\r\n//                             <td></td>\r\n//                         </tr>\r\n//                     </tbody>\r\n//                 </Table>\r\n//                 <Button>Place Order</Button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}